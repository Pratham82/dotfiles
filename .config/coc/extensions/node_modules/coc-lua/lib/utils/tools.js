"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.commandExists = exports.luaLspExists = exports.luaLspBin = exports.installLuaLsp = void 0;
const tslib_1 = require("tslib");
const path_1 = tslib_1.__importDefault(require("path"));
const fs_1 = tslib_1.__importDefault(require("fs"));
const coc_nvim_1 = require("coc.nvim");
const which_1 = tslib_1.__importDefault(require("which"));
const config_1 = require("./config");
function installLuaLsp(force = false) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        if (!force && (yield luaLspExists())) {
            return;
        }
        const baseDir = yield config_1.configDir('tools');
        let installCmd = `luarocks install --tree ${baseDir} --server=http://luarocks.org/dev lua-lsp`;
        const luaVersion = coc_nvim_1.workspace.getConfiguration().get('lua', {})['version'];
        if (luaVersion) {
            installCmd += ` --lua-version=${luaVersion}`;
        }
        yield coc_nvim_1.workspace.runTerminalCommand(installCmd);
    });
}
exports.installLuaLsp = installLuaLsp;
function luaLspBin() {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        let executable = 'lua-lsp';
        if (process.platform === 'win32') {
            // binary installed by luarocks under Windows has extension '.bat'
            executable += '.bat';
        }
        return path_1.default.join(yield config_1.configDir('tools', 'bin'), executable);
    });
}
exports.luaLspBin = luaLspBin;
function luaLspExists() {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const bin = yield luaLspBin();
        return new Promise(resolve => fs_1.default.open(bin, 'r', (err) => resolve(err === null)));
    });
}
exports.luaLspExists = luaLspExists;
function commandExists(command) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        return new Promise(resolve => which_1.default(command, (err) => resolve(err == null)));
    });
}
exports.commandExists = commandExists;
//# sourceMappingURL=tools.js.map