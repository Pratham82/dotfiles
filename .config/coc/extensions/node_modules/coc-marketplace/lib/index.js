(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = __webpack_require__(1);
const marketplace_1 = __importDefault(__webpack_require__(2));
async function activate(context) {
    const { subscriptions } = context;
    const { nvim } = coc_nvim_1.workspace;
    subscriptions.push(coc_nvim_1.listManager.registerList(new marketplace_1.default(nvim)));
}
exports.activate = activate;


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("coc.nvim");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = __webpack_require__(1);
class Marketplace extends coc_nvim_1.BasicList {
    constructor(nvim) {
        super(nvim);
        this.name = 'marketplace';
        this.description = 'coc.nvim extensions marketplace';
        this.detail = 'display all coc.nvim extensions in list, with an install action';
        this.defaultAction = 'install';
        this.npmsio = coc_nvim_1.workspace.getConfiguration('marketplace').get('npmsio', false);
        this.installed = [];
        this.addAction('install', async (item) => {
            await nvim.command(`CocInstall ${item.data.name}`);
        });
        this.addAction('uninstall', async (item) => {
            if (!item.data.installed) {
                return;
            }
            await nvim.command(`CocUninstall ${item.data.name}`);
        });
        this.addAction('homepage', async (item) => {
            if (item.data.homepage) {
                coc_nvim_1.commands.executeCommand('vscode.open', item.data.homepage).catch(() => {
                    // noop
                });
            }
        });
    }
    async loadItems(context) {
        this.installed = await coc_nvim_1.extensions.getExtensionStates();
        const { args } = context;
        let query = '';
        if (args && args.length > 0) {
            for (const arg of args) {
                if (arg.startsWith('--')) {
                    continue;
                }
                query = arg;
            }
        }
        const items = [];
        const exts = await this.fetchExtensions();
        for (const ext of exts) {
            if (query && query.length > 0) {
                if (ext.name.indexOf(query) < 0) {
                    continue;
                }
            }
            items.push({
                label: ext.label,
                data: {
                    installed: ext.installed,
                    homepage: ext.homepage,
                    name: ext.name
                }
            });
        }
        items.sort((a, b) => {
            return b.label.localeCompare(a.label);
        });
        return items;
    }
    async fetchExtensions() {
        const statusItem = coc_nvim_1.workspace.createStatusBarItem(0, { progress: true });
        statusItem.text = 'Loading...';
        statusItem.show();
        let uri = 'http://registry.npmjs.com/-/v1/search?text=keywords:coc.nvim';
        if (this.npmsio) {
            uri = 'https://api.npms.io/v2/search?q=keywords:coc.nvim';
        }
        let exts = [];
        const size = 200;
        let page = 0;
        while (true) {
            try {
                uri = `${uri}&size=${size}&from=${size * page}`;
                const resp = (await coc_nvim_1.fetch(uri));
                const body = typeof resp === 'string' ? JSON.parse(resp) : resp;
                exts = exts.concat(this.format(body));
                if (page === Math.floor(body.total / size)) {
                    break;
                }
                page += 1;
            }
            catch (_e) {
                break;
            }
        }
        statusItem.hide();
        return Promise.resolve(exts);
    }
    format(body) {
        const exts = [];
        let results = body.objects;
        if (this.npmsio) {
            results = body.results;
        }
        for (const item of results) {
            const pkg = item.package;
            if (pkg.name === 'coc.nvim' || pkg.name === 'coc-marketplace') {
                continue;
            }
            let sign = '';
            if (pkg.publisher.username === 'chemzqm' || pkg.publisher.email === 'chemzqm@gmail.com') {
                sign = '*';
            }
            let rtp = '';
            let status = '×';
            let isInstalled = false;
            for (const e of this.installed) {
                if (e.id === pkg.name) {
                    status = '√';
                    isInstalled = true;
                    rtp = e.isLocal ? ' [RTP]' : '';
                    break;
                }
            }
            exts.push({
                name: pkg.name,
                label: `[${status}] ${pkg.name}${sign} ${pkg.version}${rtp}`.padEnd(40) + pkg.description,
                homepage: pkg.links.homepage ? pkg.links.homepage : pkg.links.npm,
                installed: isInstalled
            });
        }
        return exts;
    }
    doHighlight() {
        const { nvim } = this;
        nvim.pauseNotification();
        nvim.command('syntax match CocMarketplaceExtName /\\v%5v\\S+/', true);
        nvim.command('syntax match CocMarketplaceExtStatus /\\v^\\[[√×\\*]\\]/', true);
        nvim.command('syntax match CocMarketplaceExtVersion /\\v\\d+(\\.\\d+)*/', true);
        nvim.command('syntax match CocMarketplaceExtDescription /\\v%40v.*$/', true);
        nvim.command('highlight default link CocMarketplaceExtName String', true);
        nvim.command('highlight default link CocMarketplaceExtStatus Type', true);
        nvim.command('highlight default link CocMarketplaceExtVersion Tag', true);
        nvim.command('highlight default link CocMarketplaceExtDescription Comment', true);
        nvim.resumeNotification().catch(() => {
            // noop
        });
    }
}
exports.default = Marketplace;


/***/ })
/******/ ])));